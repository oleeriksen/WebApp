@using Core.Model
@page "/weather"
@inject HttpClient Http

<PageTitle>Weather</PageTitle>

<h1>Weather</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
                <th>Location</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                    <td>@forecast.Location</td>
                </tr>
            }
        </tbody>
    </table>
    <button class="btn btn-primary" @onclick="() => LoadData(10)">Hent</button>
    <button class="btn btn-primary" @onclick="() => ChangeAmount(-5)">5 mindre</button>
    <button class="btn btn-primary" @onclick="() => ChangeAmount(5)">5 mere</button>
}

@code {
    private WeatherForecast[] forecasts = new WeatherForecast[0];

    protected async Task LoadData(int n)
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>($"https://localhost:7060/vejr/{n}");
    }

    async Task ChangeAmount(int delta) {
        int count = forecasts.Length + delta;
        await LoadData(count);
    }


}

